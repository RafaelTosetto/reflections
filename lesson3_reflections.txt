Q1 - When would you want to use a remote repository rather than keeping all your work local?
To keep a safe copy, as a backup of my files, in cloud; or if I use a public computer, as in my college, for instance, I shall not let any files locally.
Also, to keep every file centralized in one place that several developers are working at a shared or public project.

Q2 - Why might you want to always pull changes manually rather than havin 
Git automatically stay up-to-date with your remote repository?
So I can choose the files I want to become avaliable publicly.

Q3 - Describe the differences between forks, clones, and branches. When would
you use one instead of another?
Fork differs from the others because it is a feature only Github related.
Clones is only used in our local machine to copy data from a repository in Github.
Branch is only a space where files are stored in either Github and/or locally. It could be used to separate the files you want to public, as a measure to control what will be visible to everyone.

Q4 - What is the benefit of having a copy of the last known state of the
 remote stored locally?
It enables to work offline with updated content from the repository.

Q5 - How would you collaborate without Git or GitHub? What would be easier 
and what would be harder?
Probably I would use Dropbox, since I use it in the past to work under my article for college with my friends. 
Also, those are information that couldn't become public. Thus, is easier to not use Git if you pretend to share private files online or if you are
dealing with coworkers who dont know how to use Git.
The harder depends the kind of files you are dealing with. For instance, if I were supposed to work with scripts or programming language, I would definitelly use Git and teach anyone who shall colloborate with me, even
 if the person never used Git before.

Q1 - What happens when you initialize a repository? Why do you need to do it?
You set the directory to use git. It is used when control version files is needed.

Q2 - How is the staging area different from the working directory and the repository? What value do you think it offers?
Only the files within the stating area will be included in the repository when commit. It allows us to select which files we want to keep a history using git.

Q3 - How can you use the staging area to make sure you have one commit per logical change?
I can check the changes in my working directory and compare with the staging area, which is the same content as the most updated file from the newest commit

Q4 - What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When some experimental code is made, or when adding simultaneous features in the same time.

Q5 - How do the diagrams help you visualize the branch structure?
It explained the track of git log and is easy to notice that if we made a commit in a previous checkout, this commit will not be reacheable by git log. In this case, it is recomended to create a new branch in order to keep the changes in the new commit.

Q6 - What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging branches means to unify it in a way to add specific changes that was in a different line of develop, into the main program code, as a result adding new features and expanding the program. 
The diagram representation was made in order to easy undestand how merging works, and how is the behavior of each branches's commit in the final, after the merge. 
